<script setup lang="ts">
import type ReviewModel from "~/features/ListingFeature/Data/models/review_model";
import { formatDate } from "~/base/persention/utils/get_date";
import VoteReviewsController from "~/features/VoteReviewFeature/presentation/controllers/report_review_controller";
import VoteReviewParams from "~/features/VoteReviewFeature/Core/Params/vote_review_params";

const props = defineProps<{ reviews: ReviewModel[]; myReview: ReviewModel }>();

const voteReviewsController = VoteReviewsController.getInstance();

const voteReview = async (id: number, type: number) => {
  await voteReviewsController.voteReview(new VoteReviewParams.Params(id, type));
};
</script>

<template>
  <section class="rate-wrapper">
    <div class="my-rate" v-if="myReview?.id">
      <div class="rate-content">
        <div class="flex">
          <div class="client-img">
            <NuxtImg
              :src="myReview.clientImage ?? ''"
              :alt="myReview.clientName ?? ''"
              class="client-opinion-card-img"
              format="webp"
            />
          </div>
          <div>
            <h4 class="user-name">{{ myReview.clientName }}</h4>
            <div class="rate-count flex gap-2">
              <GlobalRate :rateCount="4" />
              <span class="rate-date"> {{ myReview.createdAt }} </span>
            </div>
          </div>
        </div>

        <p class="rate-text">
          {{ myReview.comment }}
        </p>
        <div class="images">
          <div class="image" v-for="i in myReview.images">
            <NuxtImg
              :src="i.image"
              class="client-opinion-card-img"
              format="webp"
            />
          </div>
        </div>
      </div>
    </div>

    <div class="rates" v-for="rate in reviews" :key="rate.id">
      <div class="flex">
        <div class="client-img">
          <NuxtImg
            :src="rate.clientImage"
            :alt="rate.clientName"
            class="client-opinion-card-img"
            format="webp"
          />
        </div>
        <div>
          <h4 class="user-name">{{ rate.clientName }}</h4>
          <div class="rate-count flex gap-2">
            <GlobalRate :rateCount="4" />
            <span class="rate-date"> {{ formatDate(rate.createdAt) }} </span>
          </div>
        </div>
      </div>
      <div class="rate-content">
        <p class="rate-text">
          {{ rate.comment }}
        </p>
      </div>
      <div class="images">
        <div class="image" v-for="i in rate.images">
          <NuxtImg
            :src="i.image"
            class="client-opinion-card-img"
            format="webp"
          />
        </div>
      </div>
      <div class="votes">
        <div class="vote">
          <button type="button" aria-label="upvote" class="vote-btn">
            <IconsUpvote />
          </button>

          <span class="vote-number">
            {{ $t("Upvote") }} ({{ myReview?.upVotes }})
          </span>
        </div>
        <div class="vote">
          <button type="button" aria-label="upvote" class="vote-btn">
            <IconsDownVote />
          </button>

          <span class="vote-number">
            {{ $t("Downvote") }} ({{ myReview?.downVotes }})
          </span>
        </div>
      </div>
    </div>
  </section>
</template>

<style scoped></style>
