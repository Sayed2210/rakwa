<script setup lang="ts">
import FetchListingController from "~/features/FetchListingFeature/presentation/controllers/fetch_listings_controller";
import ListingParams from "~/features/ListingFeature/Core/Params/listing_params";
import FetchListingParams from "~/features/FetchListingFeature/Core/Params/fetch_listings_params";

definePageMeta({
  layout: "dashboard",
});

useSeoMeta({
  title: "Listings",
  ogTitle: "Listings",
  description: "Listings",
  ogDescription: "Listings",
});
const fetchListingController = FetchListingController.getInstance();
const state = ref(fetchListingController.state.value);

const status = ref<number>(1);
const fetchListings = async () => {
  await fetchListingController.fetchListing(
    new FetchListingParams(status.value, "", 1, 10),
  );
};

onMounted(async () => {
  await fetchListings();
});
const toggle = ref<string>("active");

watch(
  () => toggle.value,
  () => {
    status.value =
      toggle.value === "active" ? 1 : toggle.value === "pending" ? 2 : 3;
    fetchListings();
  },
);

watch(
  () => fetchListingController.state.value,
  (newVal, oldVal) => {
    console.log("State changed:", newVal);
    state.value = newVal;
  },
  { deep: true },
);
</script>

<template>
  <div class="tabs">
    <button
      type="button"
      :class="[toggle === 'active' ? 'active' : '', 'tab']"
      @click="toggle = 'active'"
    >
      {{ $t("active") }}
    </button>
    <button
      type="button"
      :class="[toggle === 'pending' ? 'active' : '', 'tab']"
      @click="toggle = 'pending'"
    >
      {{ $t("pending") }}
    </button>
    <button
      type="button"
      :class="[toggle === '' ? 'active' : '', 'tab']"
      @click="toggle = ''"
    >
      {{ $t("expired") }}
    </button>
  </div>
  <div class="flex justify-end mt-4">
    <div class="input-search">
      <div class="search-icon">
        <IconsSearch />
      </div>
      <input type="text" placeholder="Search by title" />
    </div>
  </div>

  <div class="active-listing">
    <GlobalDataStatues :status="state">
      <template #empty>
        <ListingNoListing />
      </template>
      <template #failed>
        <ListingNoListing />
      </template>
      <template #loader>
        <div class="flex flex-col gap-4">
          <ListingLoadingCard v-for="i in 3" :key="i" />
        </div>
      </template>
      <template #initial> <ListingLoadingCard /> </template
      ><template #success>
        <div class="flex flex-col gap-4" v-if="toggle === 'active'">
          <div v-for="(listing, index) in state.data" :key="index">
            <ListingActiveCard :listing="listing" />
          </div>
        </div>
        <div class="flex flex-col gap-4" v-if="toggle === 'pending'">
          <div v-for="(listing, index) in state.data" :key="index">
            <ListingPendingCard :listing="listing" />
          </div>
        </div>
        <div class="flex flex-col gap-4" v-if="toggle === ''">
          <div v-for="(listing, index) in state.data" :key="index">
            <ListingExpiredCard :listing="listing" />
          </div>
        </div>
      </template>
    </GlobalDataStatues>
  </div>
</template>

<style scoped></style>
